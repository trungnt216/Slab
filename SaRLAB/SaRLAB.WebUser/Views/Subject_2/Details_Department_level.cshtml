@model SaRLAB.Models.Entity.Document

@{
    ViewData["Title"] = "Details_Biological";
    Layout = "~/Views/Subject_2/_Layout.cshtml";
    ViewBag.TitleCustom = "Chi tiết đề tài cấp sở";
}

<div id="sub-content">
    <div class="container">
        <div class="row">
            <div class="col-12 detail-container">
                <div class="d-flex justify-content-between">
                    <partial name="_TitleCustom">
                    <div class="detail-action">
                            <a asp-area="" asp-action="Edit_Department_level"
                                asp-route-id="@Model.ID" class="btn-edit" type="button">
                            <i class="fa-solid fa-pen-to-square"></i>
                            Chỉnh sửa
                        </a>
                            <a asp-area="" asp-action="GetAll_Department_level"
                                class="btn-custom-return" type="button">
                            <i class="fa-solid fa-angles-left"></i>
                            Trở về
                        </a>
                    </div>
                </div>
                <dl class="row">
                    <div class="col-12 col-md-4">
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-file-signature"></i>
                                <p>Tên thực nghiệm</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.Name)</p>
                        </div>
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-comment"></i>
                                <p>Nhận xét</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.Remark)</p>
                        </div>
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-user"></i>
                                <p>Người tạo</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.CreateBy)</p>
                        </div>
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-clock"></i>
                                <p>Thời gian tạo</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.CreateTime)</p>
                        </div>
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-user"></i>
                                <p>Người cập nhật</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.UpdateBy)</p>
                        </div>
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-solid fa-clock"></i>
                                <p>Thời gian cập nhật</p>
                            </div>
                            <p class="detail">@Html.DisplayFor(model => model.UpdateTime)</p>
                        </div>
                    </div>
                    <div class="col-12 col-md-8">
                        <div class="detail-item">
                            <div class="title">
                                <i class="fa-regular fa-file"></i>
                                <p>Chi tiết file</p>
                            </div>
                        </div>
                        @if (string.IsNullOrEmpty(Model.Path))

                        {
                            <span style="color: #5d6975; font-style: italic; padding-left: 25px;">Không có sẵn file
                                nào!</span>
                        }

                        else

                        {

                            string path = Model.Path;

                            string extension = System.IO.Path.GetExtension(path).ToLower();

                            if (extension == ".jpg" || extension == ".jpeg" || extension == ".png" || extension == ".gif")

                            {
                                <img src="@Url.Content(path)" alt="Image" style="max-width: 100%; height: auto;" />
                            }

                            else if (extension == ".mp4" || extension == ".webm" || extension == ".ogg")

                            {
                                <video width="100%" height="auto" controls>
                                    <source src="@Url.Content(path)" type="video/@extension.Substring(1)">
                                    Your browser does not support the video tag.
                                </video>
                            }

                            else if (extension == ".pdf")

                            {
                                <object class="pdf" data="@Url.Content(path)" width="100%" height="800">
                                </object>
                            }

                            else if (Model.Path.Contains("youtube.com/embed"))

                            {
                                <iframe width="560" height="315" src="@Model.Path" frameborder="0" allowfullscreen></iframe>
                            }

                            else

                            {
                                <p class="form-text-danger">Không hỗ trợ file!</p>
                            }

                        }
                    </div>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.ID)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.ID)
                    </dd>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.SpecializedEnglishFlag)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.SpecializedEnglishFlag)
                    </dd>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.PageFlag)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.PageFlag)
                    </dd>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.Type)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.Type)
                    </dd>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.SchoolId)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.SchoolId)
                    </dd>
                    <dt class="col-sm-2 d-none">
                        @Html.DisplayNameFor(model => model.SubjectId)
                    </dt>
                    <dd class="col-sm-10 d-none">
                        @Html.DisplayFor(model => model.SubjectId)
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>
