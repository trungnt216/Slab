@model IEnumerable<SaRLAB.Models.Entity.Document>

@{
    ViewData["Title"] = "GetAll_Preparation_questions";

    Layout = "~/Views/Home/_LayoutHome.cshtml";

    ViewBag.TitleCustom = "Danh sách câu hỏi chuẩn bị";

    int counter = 1;
}


<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        padding-top: 200px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 400px;
        text-align: center;
        align-items: center;
    }

    .modal-content h6 {
        font-size: 16px;
        margin-bottom: 5px;
    }

    .modal-content .modal-img {
        width: 50px;
        height: 50px;
        margin-bottom: 15px;
        background: #ffe4e4;
        border-radius: 30px;
        padding: 8px;
    }

    .modal-action {
        justify-content: center;
        align-items: center;
        margin: 10px 0px
    }

    .modal-action .btn-secondary {
        margin-right: 10px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
</style>

<div id="sub-content">
    <partial name="TitleCustom">
        <div class="table-container">
            <div class="table-action row">
                <div class="col-9">
                    <div class="search-box">
                        <i class="fa-solid fa-magnifying-glass"></i>
                        <input type="text" id="searchInput" onkeyup="searchTable()" class="form-control" placeholder="Tìm kiếm&hellip;">
                    </div>
                </div>
                <div class="col-3 d-flex">
                    <button id="deleteSelected" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal">
                        <i class="fa-solid fa-trash-can"></i>
                        Xóa
                    </button>
                    <button id="deleteSelectedTrigger" class="btn btn-danger btn-danger-trigger" data-toggle="modal" data-target="#deleteModal">
                        <i class="fa-solid fa-trash-can"></i>
                    </button>
                </div>
            </div>
            <div id="popupNotification" class="alert alert-danger">
                @TempData["notice"]
            </div>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAll" />
                            </th>
                            <th>#</th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.ID)
                            </th>
                            <th>
                                Tên
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.Path)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.SpecializedEnglishFlag)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.PageFlag)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.Type)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.Remark)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.SchoolId)
                            </th>
                            <th>
                                Người tạo
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.CreateTime)
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.UpdateBy)
                            </th>
                            <th>
                                Thời gian cập nhật
                            </th>
                            <th class="d-none">
                                @Html.DisplayNameFor(model => model.SubjectId)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)







                        {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="selectRow" data-id="@item.ID" />
                                        </td>
                                        <td>
                                    @counter
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.ID)
                                        </td>
                                        <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.Path)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.SpecializedEnglishFlag)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.PageFlag)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.Type)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.Remark)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.SchoolId)
                                        </td>
                                        <td>
                                    @Html.DisplayFor(modelItem => item.CreateBy)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.CreateTime)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.UpdateBy)
                                        </td>
                                        <td>
                                    @Html.DisplayFor(modelItem => item.UpdateTime)
                                        </td>
                                        <td class="d-none">
                                    @Html.DisplayFor(modelItem => item.SubjectId)
                                        </td>
                                        <td>
                                            <a class="btn-custom-check" asp-action="Accept_Preparation_questions" asp-route-id="@item.ID">
                                                <i class="fa-solid fa-circle-check"></i>
                                            </a>
                                            <a class="btn-custom-view-detail" asp-action="Details_Preparation_questions" asp-route-id="@item.ID">
                                                <i class="fa-solid fa-eye"></i>
                                            </a>
                                            <a class="delete" href="#" data-url="@Url.Action("Delete_Preparation_questions", "Chemistry", new { id = item.ID })" onclick="openDeleteModal(this)">
                                                <i class="fa-solid fa-trash"></i>
                                            </a>
                                        </td>
                                    </tr>
                            counter++;







                        }
                    </tbody>
                </table>
                @if (Model == null || !Model.Any())



                {
                            <p class="text-danger" style="text-align: center; font-style: italic; font-weight: 500;">Không có dữ liệu!</p>
                }
            </div>
        </div>
</div>

<div id="deleteModal" class="modal">
    <div class="modal-content">
        <img class="modal-img" src="@Url.Content("~/images/ic_warning.png")" />
        <h6>Xác nhận xóa</h6>
        <p>Bạn có chắc chắn muốn xóa mục này?</p>
        <div class="d-flex modal-action">
            <button class="btn btn-secondary" onclick="closeDeleteModal()">Hủy</button>
            <button id="confirmDeleteButton" class="btn btn-danger">Xóa</button>
        </div>
    </div>
</div>

@section Scripts {
                <script src="~/js/table.js"></script>
                <script type="text/javascript">
                    var deleteUrl = '';
                    var selectedIds = [];

                    document.getElementById('selectAll').addEventListener('change', function () {
                        var checkboxes = document.querySelectorAll('.selectRow');
                        for (var checkbox of checkboxes) {
                            checkbox.checked = this.checked;
                        }
                    });

                    document.getElementById('deleteSelected').addEventListener('click', function () {
                        selectedIds = [];
                        var checkboxes = document.querySelectorAll('.selectRow:checked');
                        for (var checkbox of checkboxes) {
                            selectedIds.push(checkbox.getAttribute('data-id'));
                        }

                        if (selectedIds.length > 0) {
                            document.getElementById('deleteModal').style.display = 'block';
                        } else {
                            alert("Vui lòng chọn ít nhất một mục để xóa.");
                        }
                    });

                document.getElementById('deleteSelectedTrigger').addEventListener('click', function () {
                    selectedIds = [];
                    var checkboxes = document.querySelectorAll('.selectRow:checked');
                    for (var checkbox of checkboxes) {
                        selectedIds.push(checkbox.getAttribute('data-id'));
                    }

                    if (selectedIds.length > 0) {
                        document.getElementById('deleteModal').style.display = 'block';
                    } else {
                        alert("Vui lòng chọn ít nhất một mục để xóa.");
                    }
                });


                    // Mở modal xóa cho từng item
                    function openDeleteModal(element) {
                        deleteUrl = element.getAttribute("data-url");
                        selectedIds = [];
                        document.getElementById('deleteModal').style.display = 'block';
                    }


                    function closeDeleteModal() {
                        document.getElementById('deleteModal').style.display = 'none';
                    }

                    // Xác nhận xóa
                    document.getElementById('confirmDeleteButton').onclick = function () {
                        if (selectedIds.length > 0) {
                            // Gửi yêu cầu xóa nhiều mục
                            fetch('@Url.Action("DeleteMultipleBanners", "Configuration")', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ Ids: selectedIds })
                            }).then(response => {
                                if (response.ok) {
                                    window.location.reload();
                                } else {
                                    alert("Có lỗi xảy ra khi xóa các mục.");
                                }
                            });
                        } else if (deleteUrl) {
                            // Gửi yêu cầu xóa một mục
                            window.location.href = deleteUrl;
                        }
                    };


                    window.onclick = function (event) {
                        var modal = document.getElementById('deleteModal');
                        if (event.target == modal) {
                            modal.style.display = 'none';
                        }
                    }
                </script>
}